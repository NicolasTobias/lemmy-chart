{{- $fullName := include "lemmy.fullname" . -}}
{{- $apiPort := .Values.lemmy.service.port -}}
{{- $uiPort := (index .Values "lemmy-ui").service.port -}}
kind: ConfigMap
apiVersion: v1
metadata:
  name: {{ $fullName }}-nginx
  namespace: {{ .Release.Namespace }}
data:
  nginx.conf: |
    worker_processes {{ .Values.nginx.config.worker_processes }};
    events {
        worker_connections {{ .Values.nginx.config.worker_connections }};
    }
    http {
        upstream lemmy {
            # this needs to map to the lemmy (server) docker service hostname
            server "{{ $fullName }}-api:{{ $apiPort }}";
        }
        upstream lemmy-ui {
            # this needs to map to the lemmy-ui docker service hostname
            server "{{ $fullName }}-ui:{{ $uiPort }}";
        }

        server {
            # this is the port inside docker, not the public one yet
            listen {{ .Values.nginx.service.port }};
            # change if needed, this is facing the public web
            server_name {{ $fullName }}-nginx;
            server_tokens off;

            gzip on;
            gzip_types text/css application/javascript image/svg+xml;
            gzip_vary on;

            # Upload limit, relevant for pictrs
            client_max_body_size 20M;

            add_header X-Frame-Options SAMEORIGIN;
            add_header X-Content-Type-Options nosniff;
            add_header X-XSS-Protection "1; mode=block";

            # frontend general requests
            location / {
                # distinguish between ui requests and backend
                # don't change lemmy-ui or lemmy here, they refer to the upstream definitions on top
                set $proxpass "http://lemmy-ui";

                if ($http_accept ~ "^application/.*$") {
                  set $proxpass "http://lemmy";
                }
                if ($request_method = POST) {
                  set $proxpass "http://lemmy";
                }
                proxy_pass $proxpass;

                rewrite ^(.+)/+$ $1 permanent;
                # Send actual client IP upstream
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header Host $host;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            }

            # backend
            location ~ ^/(api|pictrs|feeds|nodeinfo|.well-known) {
                proxy_pass "http://lemmy";
                # proxy common stuff
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "upgrade";

                # Send actual client IP upstream
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header Host $host;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            }
        }
    }
  