# Default values for lemmy.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

# General configuration for the lemmy instance
configuration:
  host: "lemmy.level5.dev"
  adminUsername: "lemmy"
  siteName: "meneame"
  enableTLS: false
  bindAddress: "0.0.0.0"
  adminEmail: "meneame@level5.dev"
  opentelemetry: ""

# Configuration of the lemmy instance
lemmy:
  image:
    repository: dessalines/lemmy
    pullPolicy: IfNotPresent
    tag: "0.17.4"
  config:
    rustLog: "warn,lemmy_server=warn,lemmy_api=warn,lemmy_api_common=warn,lemmy_api_crud=warn,lemmy_apub=warn,lemmy_db_schema=warn,lemmy_db_views=warn,lemmy_db_views_actor=warn,lemmy_db_views_moderator=warn,lemmy_routes=warn,lemmy_utils=warn,lemmy_websocket=warn"
    rustBacktrace: "full"
  # These shouldn't change much, but are API endpoints to redirect to the lemmy api pod
  apiEndpoints:
    - "/api"
    - "/pictrs"
    - "/feeds"
    - "/nodeinfo"
    - "/.well-known"
  service:
    type: ClusterIP
    port: 8536
  securityContext:
    capabilities:
      drop:
      - ALL
    runAsNonRoot: true
    runAsUser: 1000
    runAsGroup: 1000
  podAnnotations: {}
  podSecurityContext: {}
  resources: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

lemmy-ui:
  image:
    repository: dessalines/lemmy-ui
    pullPolicy: IfNotPresent
    tag: "0.17.4"
  config:
    externalHost: lemmy.level5.dev
    https: false
    debug: true
  service:
    type: ClusterIP
    port: 8080
  securityContext:
    capabilities:
      drop:
      - ALL
    runAsNonRoot: true
    runAsUser: 1000
    runAsGroup: 1000
  podSecurityContext: {}
  podAnnotations: {}
  resources: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}

nginx:
  image:
    repository: nginx
    pullPolicy: IfNotPresent
    tag: "alpine3.17"
  config:
    worker_connections: 1024
    worker_processes: 1
  service:
    type: ClusterIP
    port: 80
  securityContext:
    runAsNonRoot: false
    runAsUser: 0
    runAsGroup: 0
  podSecurityContext: {}
  podAnnotations: {}
  resources: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}

pictrs:
  image:
    repository: asonix/pictrs
    pullPolicy: IfNotPresent
    tag: "0.4.0-rc.3"
  storage:
    kind: persistentVolumeClaim
    pvc:
      storageClassName: "truenas-nfs-csi-retain"
      size: 16Gi
  config:
    opentelemetry: ""
    apiKey: "API_KEY"
    rustLog: "debug"
    rustBacktrace: "full"
    videoCodec: "vp9"
    gifMaxWidth: 256
    gifMaxHeight: 256
    gifMaxArea: 65536
    gifMaxFrameCount: 400
  service:
    type: ClusterIP
    port: 8080
  securityContext:
    capabilities:
      drop:
      - ALL
    runAsNonRoot: true
    runAsUser: 991
    runAsGroup: 991
  podSecurityContext:
    fsGroup: 991
  podAnnotations: {}
  resources: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}

postgres:
  enabled: true
  poolSize: 10
  storage:
    kind: "persistentVolumeClaim"
    pvc:
      storageClassName: "openebs-hostpath"
      size: 16Gi
  image:
    repository: postgres
    pullPolicy: IfNotPresent
    tag: "15-alpine"
  service:
    type: ClusterIP
    port: 5432
  securityContext:
    capabilities:
      drop:
      - ALL
    runAsNonRoot: true
    runAsUser: 70
    runAsGroup: 70
  podSecurityContext:
    fsGroup: 70
  podAnnotations: {}
  resources: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

ingress:
  enabled: false
  className: "haproxy"
  hosts:
    - host: lemmy.level5.dev
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []


autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

